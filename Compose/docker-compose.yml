version: '3.4'
      
services:

  # The test app. Runs code to write/read via dapr and direct to redis.
  stateperformancetesting:
    image: ${DOCKER_REGISTRY-}stateperformancetesting
    build:
      context: .
      dockerfile: ../StatePerformanceTesting/Dockerfile
    ports:
      - "50001:50001" # Dapr instances communicate over gRPC so we need to expose the gRPC port
    depends_on:
      - redis
      - placement
    networks:
      - local-network

  # The dapr side car, which abstracts away redis from the test app.    
  stateperformancetesting-dapr:
    image: "daprio/daprd:edge"
    command: [
      "./daprd",
     "--app-id", "stateperformancetesting",
     "--app-port", "3000",
     "--placement-host-address", "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
     "--dapr-grpc-port", "50001",
     "--resources-path", "./components"
     ]
    volumes:
        - "./components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - stateperformancetesting
    network_mode: "service:stateperformancetesting" # Attach the stateperformancetesting-dapr service to the stateperformancetesting network namespace

  # A dapr component.  
  placement:
    image: "daprio/dapr"
    command: ["./placement", "--port", "50006"]
    ports:
      - "50006:50006"
      
  # The redis instance.
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - local-network
      
networks:
  local-network:
 
